workflows:
  ionic-capacitor-ios-workflow:
    name: Ionic Capacitor iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: codemagic
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.tech.elabs.ionic
      vars:
        # Ionic Xcode worskspace and scheme
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        APP_STORE_APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
      node: v14.21.3
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Install npm dependencies for Ionic project
        script: |
          npm install
      - name: Cocoapods installation
        script: |
          cd ios/App && pod install
      - name: Update dependencies and copy web assets to native project
        script: |
          # npx cap copy # <- use this is you don't need to update native dependencies
          npx cap sync # <- update native dependencies and copy web assets to native project
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/ios/App
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_ID")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
      - name: Build ipa for distribution
        script: |
          cd $CM_BUILD_DIR/ios/App
          xcode-project build-ipa \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - gourav@e-labs.ai
          - kunal@e-labs.ai
        notify:
          success: false     # To not receive a notification when a build succeeds
          failure: false     # To not receive a notification when a build fails
      app_store_connect:
        auth: integration

        # Configuration related to TestFlight (optional)
        # Note: This action is performed during post-processing.
        submit_to_testflight: true
        beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
          - group name 1
          - group name 2

        # Configuration related to App Store (optional)
        # Note: This action is performed during post-processing.
        submit_to_app_store: false

  ionic-capacitor-Android-Alpha-workflow:
    name: Android Alpha workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - google_credentials # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS <-- Put CONTENTS of your Gloud crendentials file here)
        - aws_credentials # <-- (For aws credentials of token for npm install)
        - codemagic_app_signin
      android_signing:
        - codemagic_elabs_keystore
      vars:
        PACKAGE_NAME: "com.tech.elabs.ionic"
        GOOGLE_PLAY_TRACK: alpha
        AWS_ACCESS_KEY_ID_HOLDER: $AWS_ACCESS_KEY_ID
        AWS_SECRET_ACCESS_KEY_HOLDER: $AWS_SECRET_ACCESS_KEY
        AWS_DEFAULT_REGION_HOLDER: $AWS_DEFAULT_REGION
      node: v14.21.3
      npm: 6.14.18
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Get AWS Code Artifact Token
        script: |
          #echo $AWS_DEFAULT_REGION_HOLDER
          #aws --version
          #aws ls
          ionic version
          #echo "hello world"
          #aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID_HOLDER"
          #aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY_HOLDER"
          #aws configure set region "$AWS_DEFAULT_REGION_HOLDER"
          #aws configure set output "json"
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ui-libs --domain-owner 292474393014 --query authorizationToken --output text`
          aws codeartifact login --tool npm --repository ui-library --domain ui-libs --domain-owner 292474393014 --region ap-south-1
          #echo "kunal"
          #echo $CODEARTIFACT_AUTH_TOKEN
          npm config set registry=https://ui-libs-292474393014.d.codeartifact.ap-south-1.amazonaws.com/npm/ui-library/
          npm config set //ui-libs-292474393014.d.codeartifact.ap-south-1.amazonaws.com/npm/ui-library/:_authToken=${CODEARTIFACT_AUTH_TOKEN}
          #npm config set //ui-libs-292474393014.d.codeartifact.ap-south-1.amazonaws.com/npm/ui-library/:always-auth=true 
          npm config get registry
      - name: Install npm dependencies
        script: |          
          npm install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Update dependencies and copy web assets to native project
        script: |
          # npx cap copy # <- use this is you don't need to update native dependencies
          ionic build --prod # <- For production environment
          # ionic build # <- For Test environment
          npx cap sync # <- update native dependencies and copy web assets to native project
      - name: Build Android release
        script: |
          LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME")
          if [ -z LATEST_GOOGLE_PLAY_BUILD_NUMBER ]; then
            # fallback in case no build number was found from Google Play.
            # Alternatively, you can `exit 1` to fail the build
            # BUILD_NUMBER is a Codemagic built-in variable tracking the number
            # of times this workflow has been built
            UPDATED_BUILD_NUMBER=$BUILD_NUMBER
          else
            UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
          fi
          cd android
            chmod +x gradlew
          #./gradlew bundleRelease # -> to create the .aab and #./gradlew assembleRelease # -> to create the .apk
          ./gradlew bundleRelease \
            -PversionCode=$UPDATED_BUILD_NUMBER \
            -PversionName=1.0.$UPDATED_BUILD_NUMBER
      - name: Signing key.properties
        script: |
          cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_PASSWORD
          keyAlias=$CM_KEY_ALIAS
          storeFile=$CM_KEYSTORE_PATH
          EOF
    artifacts:
      - android/app/release/*.aab
      - android/app/build/outputs/**/*.aab
      - android/app/release/*.apk
      - android/app/build/outputs/**/*.apk
    publishing:
      email:
        recipients:
          - gourav@e-labs.ai
          - kunal@e-labs.ai
        notify:
          success: true
          failure: true
      google_play:
        # Contents of the JSON key file for Google Play service account saved
        # as a secure environment variable
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        
        # Name of the track internal, alpha, beta, production, internal app sharing,
        # or your custom track name
        track: alpha
        
        # Optional Priority of the release (only set if in-app updates are supported)
        # integer in range [0, 5]
        in_app_update_priority: 3

        # Optional. Rollout fraction (set only if releasing to a fraction of users)
        # value between (0, 1)
        rollout_fraction: 0.25

        # Optional boolean To be used ONLY if your app cannot be sent for review automatically *
        changes_not_sent_for_review: false

        # Optional boolean. Publish artifacts under a draft release.
        # Can not be used together with rollout_fraction. Defaults to false
        submit_as_draft: false

  ionic-capacitor-Android-Internal-workflow:
    name: Android Internal workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      android_signing:
        - codemagic_elabs_keystore
      groups:
        - google_credentials # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS <-- Put CONTENTS of your Gloud crendentials file here)
        - aws_credentials # <-- (For aws credentials of token for npm install)
      vars:
        PACKAGE_NAME: "com.tech.elabs.ionic"
        GOOGLE_PLAY_TRACK: alpha
        AWS_ACCESS_KEY_ID_HOLDER: $AWS_ACCESS_KEY_ID
        AWS_SECRET_ACCESS_KEY_HOLDER: $AWS_SECRET_ACCESS_KEY
        AWS_DEFAULT_REGION_HOLDER: $AWS_DEFAULT_REGION
      node: v14.21.3
      npm: 6.14.18
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      #- name: Get Code Artifact Token
        #script: | 
          #export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ui-libs --domain-owner 292474393014 --query authorizationToken --output text`
          #aws codeartifact login --tool npm --repository ui-library --domain ui-libs --domain-owner 292474393014 --region ap-south-1
      - name: Install npm dependencies for Ionic Capacito project
        script: |
          #echo $AWS_DEFAULT_REGION_HOLDER
          #aws --version
          #aws ls
          ionic version
          #echo "hello world"
          #aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID_HOLDER"
          #aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY_HOLDER"
          #aws configure set region "$AWS_DEFAULT_REGION_HOLDER"
          #aws configure set output "json"
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ui-libs --domain-owner 292474393014 --query authorizationToken --output text`
          aws codeartifact login --tool npm --repository ui-library --domain ui-libs --domain-owner 292474393014 --region ap-south-1
          #echo "kunal"
          #echo $CODEARTIFACT_AUTH_TOKEN
          npm config set registry=https://ui-libs-292474393014.d.codeartifact.ap-south-1.amazonaws.com/npm/ui-library/
          npm config set //ui-libs-292474393014.d.codeartifact.ap-south-1.amazonaws.com/npm/ui-library/:_authToken=${CODEARTIFACT_AUTH_TOKEN}
          #npm config set //ui-libs-292474393014.d.codeartifact.ap-south-1.amazonaws.com/npm/ui-library/:always-auth=true 
          npm config get registry
          
          npm install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Update dependencies and copy web assets to native project
        script: |
          # npx cap copy # <- use this is you don't need to update native dependencies
          ionic build --prod # <- For production environment
          # ionic build # <- For Test environment
          npx cap sync # <- update native dependencies and copy web assets to native project
          ls -lrt android/app
          ls -lrt android/app/build
          ls -lrt android/app/build/output
          ls -lrt android/app/build/outputs/**/*.apk
          ls -lrt android/app/build/**/release/**
          APK_PATH=$(android/app/build/**/release/** -name "*.aab" | head -1)
          jarsigner \
           -sigalg SHA1withRSA \
           -digestalg SHA1 \
           -keystore $CM_KEYSTORE_PATH \
           -storepass $CM_KEYSTORE_PASSWORD \
           -keypass $CM_KEY_PASSWORD \
           $APK_PATH $CM_KEY_ALIAS
    artifacts:
      #- android/app/build/outputs/**/*.apk
      - android/app/build/**/release/**/*.aab
    publishing:
      email:
        recipients:
          - gourav@e-labs.ai
          - kunal@e-labs.ai
        notify:
          success: true
          failure: true
      google_play:
        # Contents of the JSON key file for Google Play service account saved
        # as a secure environment variable
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        
        # Name of the track internal, alpha, beta, production, internal app sharing,
        # or your custom track name
        track: internal
        
        # Optional Priority of the release (only set if in-app updates are supported)
        # integer in range [0, 5]
        in_app_update_priority: 3

        # Optional. Rollout fraction (set only if releasing to a fraction of users)
        # value between (0, 1)
        rollout_fraction: 0.25

        # Optional boolean To be used ONLY if your app cannot be sent for review automatically *
        changes_not_sent_for_review: true
